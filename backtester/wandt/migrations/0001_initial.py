# Generated by Django 5.0.1 on 2024-02-15 14:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('broker', '0001_initial'),
        ('user_strategy', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InstrumentWandTStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument_name', models.CharField(choices=[('BANKNIFTY', 'BANKNIFTY'), ('NIFTY', 'NIFTY'), ('FINNIFTY', 'FINNIFTY')], max_length=30)),
                ('instrument_id', models.IntegerField(choices=[(256265, 'NIFTY'), (260105, 'BANKNIFTY'), (257801, 'FINNIFTY')])),
                ('strick_distance_gap', models.IntegerField(choices=[(50, 'NIFTY'), (100, 'BANKNIFTY_FINNIFTY')])),
            ],
        ),
        migrations.CreateModel(
            name='WandTStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_name', models.CharField(default='W&T', max_length=300)),
                ('strategy_create_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Running', 'Running'), ('Saved', 'Saved'), ('Stopped', 'Stopped')], default='Saved', max_length=30)),
                ('running_date', models.DateField(auto_now=True, null=True)),
                ('running_time', models.TimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_premium_group_calculate', models.BooleanField(default=False)),
                ('premium_group', models.FloatField(default=0.0)),
                ('with_qty_group_premium', models.BooleanField(default=False)),
                ('premium_group_exit_type', models.CharField(choices=[('PERCENTAGE', 'PERCENTAGE'), ('POINTS', 'POINTS')], default='POINTS', max_length=10)),
                ('premium_group_target', models.FloatField(default=0.0)),
                ('premium_group_stoploss', models.FloatField(default=0.0)),
                ('premium_target', models.FloatField(default=0.0)),
                ('premium_stoploss', models.FloatField(default=0.0)),
                ('re_entry_after_premium_exit', models.BooleanField(default=False)),
                ('paper_trading', models.BooleanField(default=False)),
                ('is_mtom_activated', models.BooleanField(default=False)),
                ('mtom_target', models.FloatField(default=0.0)),
                ('mtom_stop_loss', models.FloatField(default=0.0)),
                ('mtom_trailing_sl', models.BooleanField(default=False)),
                ('mtom_trailing_execute', models.BooleanField(default=False)),
                ('mtom_trailing_value', models.FloatField(default=0.0)),
                ('mtom_sl_movement', models.FloatField(default=0.0)),
                ('mtom_target_movement', models.FloatField(default=0.0)),
                ('strategy_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strategy_wt_strategy', to='user_strategy.strategy')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WandTStrategyLegs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('option_type', models.CharField(choices=[('CE', 'CE'), ('PE', 'PE')], default='CE', max_length=10)),
                ('action_type', models.CharField(choices=[('BUY', 'BUY'), ('SELL', 'SELL')], default='BUY', max_length=10)),
                ('start_time', models.TimeField(default='09:20')),
                ('end_time', models.TimeField(default='15:18')),
                ('selection_type', models.CharField(choices=[('atm_point', 'atm_point'), ('closest_premium', 'closest_premium')], default='atm_point', max_length=30)),
                ('strick_type', models.CharField(choices=[('ATM', 'ATM'), ('OTM', 'OTM'), ('ITM', 'ITM')], default='ATM', max_length=10)),
                ('strick_distance', models.IntegerField(default=0)),
                ('expiry_days', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('expiry_month', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('closest_premium_value', models.FloatField(default=0.0)),
                ('closest_premium_type', models.CharField(choices=[('near', 'near'), ('greater', 'greater'), ('less', 'less')], default='near', max_length=10)),
                ('instrument_product', models.CharField(choices=[('NRML', 'NRML'), ('MIS', 'MIS')], default='MIS', max_length=10)),
                ('target', models.FloatField(default=0.0)),
                ('target_type', models.CharField(choices=[('PERCENTAGE', 'PERCENTAGE'), ('POINTS', 'POINTS')], default='POINTS', max_length=10)),
                ('target_up_down', models.CharField(choices=[('UP', 'UP'), ('DOWN', 'DOWN')], default='UP', max_length=10)),
                ('is_entry_grouped', models.BooleanField(default=False)),
                ('wait_and_trade', models.BooleanField(default=False)),
                ('wait_and_trade_strick_price', models.FloatField(default=0.0)),
                ('entry_spot_price', models.FloatField(default=0.0)),
                ('entry_premium_price', models.FloatField(default=0.0)),
                ('exit_spot_stop_loss', models.FloatField(default=0.0)),
                ('exit_premium_stop_loss', models.FloatField(default=0.0)),
                ('exit_spot_target', models.FloatField(default=0.0)),
                ('exit_premium_target', models.FloatField(default=0.0)),
                ('exit_target_on', models.CharField(choices=[('spot', 'spot'), ('premium', 'premium')], default='spot', max_length=10)),
                ('exit_target_type', models.CharField(choices=[('PERCENTAGE', 'PERCENTAGE'), ('POINTS', 'POINTS')], default='POINTS', max_length=10)),
                ('is_exit_grouped', models.BooleanField(default=False)),
                ('exit_stop_loss', models.FloatField(default=0.0)),
                ('exit_target', models.FloatField(default=0.0)),
                ('trailing_sl', models.BooleanField(default=False)),
                ('trailing_sl_target_type', models.CharField(choices=[('PERCENTAGE', 'PERCENTAGE'), ('POINTS', 'POINTS')], default='POINTS', max_length=10)),
                ('trailing_sl_trigger_value', models.FloatField(default=0.0)),
                ('trailing_sl_trigger_value_difference', models.FloatField(default=0.0)),
                ('trailing_sl_movement', models.FloatField(default=0.0)),
                ('trailing_target_movement', models.FloatField(default=0.0)),
                ('re_execute', models.BooleanField(default=False)),
                ('re_entry', models.BooleanField(default=False)),
                ('re_entry_execute_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('re_entry_execute_calculate', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('re_entry_execute_on_sl', models.BooleanField(default=False)),
                ('re_entry_execute_on_target', models.BooleanField(default=False)),
                ('current_trade_status', models.CharField(choices=[('pending', 'pending'), ('entry', 'entry'), ('exit', 'exit'), ('re_entry', 're_entry')], default='pending', max_length=10)),
                ('is_auto_generated', models.BooleanField(default=False)),
                ('buy_sell_instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buy_sell_instrument', to='broker.tradinginstruments')),
                ('trading_instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='w_t_trading_inst', to='wandt.instrumentwandtstrategy')),
                ('wandtstrategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='w_t_strategy', to='wandt.wandtstrategy')),
            ],
        ),
    ]
